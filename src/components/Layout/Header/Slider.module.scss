$numOfParts: 30;
$animTime: 1s;
$stagger: 0.02s;

.slider {
  background-color: #0000005c;

  overflow: hidden;
  position: relative;
  height: 100vh;
  color: #fff;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 5rem;

  &__slide {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: -1;

    @mixin slidePrev {
      .slider__slide.s--prev & {
        @content;
      }
    }

    @mixin slideActive {
      .slider__slide.s--active & {
        @content;
      }
    }

    &-parts {
      position: absolute;
      left: 0;
      top: 0;
      display: flex;
      width: 100%;
      height: 100%;

      &:after {
        content: "";
        z-index: $numOfParts + 1;
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.1);
      }
    }

    &-part {
      $partW: (100vw / $numOfParts);

      position: relative;
      width: percentage(1 / $numOfParts);
      height: 100%;

      $partRef: &;
      $imageFadeAT: $animTime/4;

      &-inner {
        overflow: hidden;
        position: relative;
        width: 101%;
        height: 100%;
        background-size: 0 0;
        background-repeat: no-repeat;
        transition: transform $animTime/2 ease-in-out;

        &:before {
          content: "";
          position: absolute;
          width: 100vw;
          height: 100%;
          background-image: inherit;
          background-size: cover;
          background-position: center center;
          transition: opacity $imageFadeAT;
          opacity: 0;
        }

        @for $i from 1 through $numOfParts {
          #{$partRef}:nth-child(#{$i}) & {
            $delayOut: ($numOfParts - $i) * $stagger;
            $delayIn: $i * $stagger + $animTime/5;

            z-index: $numOfParts - $i;
            transition-delay: $delayOut;
            transform: translateX(percentage($i / $numOfParts * -1.3));

            @include slideActive {
              transition-delay: $delayIn;
            }

            &:before {
              left: $partW * ($i - 1) * -1;
              transition-delay: $delayOut + $imageFadeAT/2;

              @include slideActive {
                transition-delay: $delayIn;
              }
            }
          }
        }

        @include slideActive {
          transform: translateX(0);
          transition-timing-function: ease;

          &:before {
            opacity: 1;
          }
        }
      }
    }
  }
  &__dots {
    position: absolute;

    bottom: 5%;
    &__dot {
      cursor: pointer;
      position: relative;
      margin: 0 1rem;
      border: 1px solid #fff;
      border-radius: 50%;
      background-color: transparent;
      height: 1rem;
      width: 1rem;

      z-index: 100;
      &--active {
        background-color: #fff;
      }
    }
  }
}
